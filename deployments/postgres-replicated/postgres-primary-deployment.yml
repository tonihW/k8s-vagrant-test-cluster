apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-primary
  template:
    metadata:
      labels:
        type: deployment
        app: postgres-primary
    spec:
      volumes:
        - name: postgres-primary-volume
          persistentVolumeClaim:
            claimName: postgres-primary-volume-claim
        - name: postgres-primary-configs
          configMap:
            name: postgres-primary-configs
            items:
              - key: run-db-migrations.sh
                path: run-db-migrations.sh
              - key: 0_setup-replication.sql
                path: 0_setup-replication.sql
      containers:
        - name: postgres
          image: postgres:14-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password_primary
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-primary-volume
            - mountPath: /docker-entrypoint-initdb.d/run-db-migrations.sh
              name: postgres-primary-configs
              subPath: run-db-migrations.sh
            - mountPath: /docker-entrypoint-initdb.d/0_setup-replication.sql
              name: postgres-primary-configs
              subPath: 0_setup-replication.sql
